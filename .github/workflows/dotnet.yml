name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
          fetch-depth: 0  # Clona todo o hist√≥rico

    - name: List files for debugging
      run: ls -R

    - name: Print working directory
      run: pwd

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Install dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore --configuration Release

    - name: Run unit tests
      run: dotnet test --no-build --configuration Release --filter TestCategory=Unit

    - name: Run integration tests
      run: dotnet test --no-build --configuration Release --filter TestCategory=Integration
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Docker Login
      uses: docker/login-action@v3.3.0
      with:
          username: ${{  secrets.USER  }}  
          password: ${{  secrets.PASS  }}  

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: List files for debugging
      run: ls -R
      
    - name: Build and push API.Producer Docker image
      uses: docker/build-push-action@v4
      with:
          context: .
          file: TechChallengeGrupo66/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/api-producer:latest

    - name: Build and push Worker.Consumer Docker image
      uses: docker/build-push-action@v4
      with:
          context: .
          file: Worker.Consumer/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/worker-consumer:latest

    - name: Deploy with Docker Compose
      run: |
        docker-compose -f TechChallengeGrupo66/docker-compose.yml down
        docker-compose -f TechChallengeGrupo66/docker-compose.yml up -d
