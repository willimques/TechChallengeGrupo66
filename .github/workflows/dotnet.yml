name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # Est치gio 1: Build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
    # - name: Clean solution
    #  run: dotnet clean TechChallengeGrupo66.sln

      - name: Install dependencies
        run: dotnet restore TechChallengeGrupo66.sln
    
      - name: Build solution
        run: dotnet build TechChallengeGrupo66.sln  --configuration Release

  # Est치gio 2: Test
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      #- name: Run unit tests
      #  run: dotnet test TechChallengeGrupo66.sln  --no-build --configuration Release --filter TestCategory=Unit

     # - name: Run integration tests
     #   run: dotnet test TechChallengeGrupo66.sln  --no-build --configuration Release --filter TestCategory=Integration

  # Est치gio 3: Dockerize
  dockerize:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASS }}

      - name: Build and push API.Producer Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Api.Producer/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/api-producer:latest

      - name: Build and push Worker.Consumer Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Worker.Consumer/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/worker-consumer:latest

  # Est치gio 4: Deploy
  deploy:
    runs-on: ubuntu-latest
    needs: dockerize
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
   
